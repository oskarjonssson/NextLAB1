{"version":3,"file":"4.ffc9d0bc73f3e1534b37.hot-update.js","sources":["webpack:///components/FetchData.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport EditProductButton from './EditProductButton.js'\r\nimport Head from 'next/head'\r\n\r\nconst API = 'http://localhost:3001/api/getproducts';\r\n\r\n//CSS Styles Start.\r\nconst buttonStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  width: '200px',\r\n  height: '350px',\r\n  backgroundColor: 'white',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  color: 'lightgray',\r\n  margin: '10px',\r\n  padding: '20px',\r\n  fontFamily: 'Montserrat',\r\n  WebkitBoxShadow:'0px 0px 19px 0px rgba(0,0,0,0.2)',\r\n  MozBoxShadow:' 0px 0px 19px 0px rgba(0,0,0,0.2)',\r\n  BoxShadow: '0px 0px 19px 0px rgba(0,0,0,0.2)'\r\n}\r\n\r\nconst divWrapper = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n}\r\n\r\nconst containerInfo = {\r\n  width: '100%',\r\n  heiht: '50px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  fontSize: '15px'\r\n}\r\n\r\nconst containerInfoText = {\r\n  margin: '2px',\r\n  color: '#5e5e5e'\r\n}\r\n\r\nconst containerFetch = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  width: '70%',\r\n  marginTop: '30px',\r\n  flexWrap: 'wrap'\r\n}\r\n\r\nconst containerButtons = {\r\n  width: '100%',\r\n}\r\n\r\nconst buttonsStyle = {\r\n  fontFamily: 'Montserrat',\r\n  width: '100%',\r\n  border: 'none',\r\n  cursor: 'pointer',\r\n  backgroundColor: 'transparent',\r\n  outline: 'none',\r\n  borderBottom: '0.5px solid lightgray',\r\n  marginTop: '10px',\r\n}\r\n\r\nconst imgTag = {\r\n  heiht: '50px',\r\n  width: '100%',\r\n}\r\n//CSS Styles End.\r\n\r\n\r\nclass FetchData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiData: [],\r\n    }\r\n    this.deleteData = this.deleteData.bind();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchFunction();\r\n  }\r\n\r\n  //Hämtar hem våran data från servern vi själva har startat upp med http://localhost:3001/api/getproducts\r\n  fetchFunction(){\r\n    fetch(API)\r\n    .then(response => response.json())\r\n    .then(data => this.setState({ apiData: data }))\r\n  }\r\n\r\n  editProductName = (name, product, type) => {\r\n    let newData = [...this.state.apiData];\r\n    let index = newData.findIndex(p => p.name === name);\r\n    newData[index].product = product;\r\n    this.setState({ data: newData})\r\n  }\r\n  editProductType = (name, product, type) => {\r\n    let newData = [...this.state.apiData];\r\n    let index = newData.findIndex(p => p.type === type);\r\n    newData[index].name = name;\r\n    this.setState({ data: newData})\r\n  }\r\n\r\n  updateApi = (name) => {\r\n    let result = this.state.apiData.find( product => product.name === name );\r\n    console.log(result.product, result.name);\r\n    fetch('http://localhost:3001/api/update/' + name,\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(result)\r\n    })\r\n  }\r\n\r\n  deleteData = (name, product) => {\r\n    fetch('http://localhost:3001/api/delete/' + name,  { method: 'DELETE' })\r\n    .then(res => res.json())\r\n    .then(res=> {\r\n      let newData = [...this.state.apiData];\r\n      let index = newData.findIndex(p => p.name === name);\r\n      newData[index].product = product;\r\n      newData.splice(index, 1);\r\n      this.setState({ apiData: newData})\r\n      console.log(JSON.stringify(res) + ' removed successfuly');\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n  {/*Skriver ut all data vi har hämtat hem och gör om den till JSX-element*/}\r\n  const list = this.state.apiData.map(data =>\r\n    <div style={buttonStyle} key={data.name}>\r\n      <div><img style={imgTag} src={data.img}></img></div>\r\n      <div style={containerInfo}>\r\n        <p style={containerInfoText}>{data.product}</p>\r\n        <p style={containerInfoText}>{data.name}</p>\r\n        <p style={containerInfoText}>{data.type}</p>\r\n      </div>\r\n      <div style={containerButtons}>\r\n      <EditProductButton\r\n          updateProduct={this.updateApi}\r\n\r\n          editProductName={this.editProductName}\r\n          editProductType={this.editProductType}\r\n          passProduct={data.product}\r\n          passName={data.name}\r\n          passType={data.type}\r\n        />\r\n        <button style={buttonsStyle} onClick={ () => this.deleteData(data.name)}>REMOVE</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const noRes = <div>\"Du har inte startat serven till API'et\"</div>\r\n    return (\r\n      <div style={containerFetch}>\r\n      <Head>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\" />\r\n      </Head>\r\n          {list.length > 0 ? list : noRes}\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FetchData;\r\n\n\n\n// WEBPACK FOOTER //\n// components/FetchData.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AAHA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAIA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AArDA;AAEA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAuCA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA9FA;AACA;AAgGA;;;;A","sourceRoot":""}