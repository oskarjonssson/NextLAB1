{"version":3,"file":"4.4efb926f3b5c5e5aa307.hot-update.js","sources":["webpack:///components/FetchData.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport EditProductButton from './EditProductButton.js'\r\nimport AddProduct from './AddProduct.js'\r\n /*\r\n Todo.\r\n1. deleteData() ska uppdatera vårat state. Så att rätt data visas på hemsidan. Det object som har tagits bort från servern, skall även tas bort i State.\r\n2. Fixa så att deletData() inte är statisk.\r\n */\r\n\r\n\r\nconst API = 'http://localhost:3001/api/getproducts';\r\n\r\n//CSS Styles Start.\r\nconst buttonStyle = {\r\n  backgroundColor: '#80808099',\r\n  border: '1px solid #6f6f6f',\r\n  borderRadius: '5px',\r\n  color: 'white',\r\n  margin: '10px',\r\n  padding: '20px',\r\n  fontFamily: 'Arial'\r\n};\r\n\r\nconst divWrapper = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n}\r\n//CSS Styles End.\r\n\r\n\r\nclass FetchData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiData: [],\r\n    }\r\n    this.deleteData = this.deleteData.bind();\r\n    this.handleDeleteButton = this.handleDeleteButton.bind();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchFunction();\r\n  }\r\n\r\n  /*** DELETE REQUEST FETCH ***/\r\n/*  deleteData = () => {\r\n    fetch('http://localhost:3001/api/TheOne',  { method: 'DELETE' })\r\n    .then(res => res.json())\r\n    .then(res => console.log(res))\r\n  } */\r\n\r\n\r\n  //Hämtar hem våran data från servern vi själva har startat upp med http://localhost:3001/api/getproducts\r\n  fetchFunction(){\r\n    fetch(API)\r\n    .then(response => response.json())\r\n    .then(data => this.setState({ apiData: data }))\r\n  }\r\n\r\n  editProduct = (name, product, type) => {\r\n    console.log(this.state.apiData);\r\n    let newData = [...this.state.apiData];\r\n    let index = newData.findIndex(p => p.name === name);\r\n    newData[index].product = product;\r\n    this.setState({ data: newData})\r\n  }\r\n\r\n  deleteData = (name, product) => {\r\n    let newData = [...this.state.apiData];\r\n    console.log(name);\r\n    let index = newData.findIndex(p => p.name === name);\r\n    newData[index].product = product;\r\n    console.log(index);\r\n    newData.splice(index, 1);\r\n    this.setState({ apiData: newData})\r\n    console.log(newData);\r\n  }\r\n\r\n  addProduct = (name, product , type) => {\r\n    console.log(\"HÄMTAR\")\r\n    let newData = [...this.state.apiData];\r\n    let obj = {name, product , type};\r\n    newData.push(obj);\r\n    console.log(newData)\r\n    this.setState({ apiData: newData})\r\n//onClick={() => this.deleteProduct(data.name)}\r\n  }\r\n\r\n  handleDeleteButton = (event) => {\r\n    let deleteTarget = event.target.value;\r\n    this.deleteData(data.name, deleteTarget)\r\n    console.log('data.name: ', data.name);\r\n  }\r\n\r\n  render() {\r\n  {/*Skriver ut all data vi har hämtat hem och gör om den till JSX-element*/}\r\n  const list = this.state.apiData.map(data =>\r\n    <div style={buttonStyle} key={data.name}>\r\n      <EditProductButton\r\n          editProduct={this.editProduct}\r\n          passProduct={data.product}\r\n          passName={data.name}\r\n          passType={data.type}\r\n      />\r\n      <button onClick={this.handleDeleteButton}>Remove</button>\r\n      <div>Product: {data.product}</div>\r\n      <div>Name: {data.name}</div>\r\n      <div>Type: {data.type}</div>\r\n    </div>\r\n  );\r\n\r\n  const noRes = <div>\"Du har inte startat serven till API'et\"</div>\r\n    return (\r\n      <div>\r\n        <div style={divWrapper}>\r\n          {list.length > 0 ? list : noRes}\r\n        </div>\r\n        <AddProduct\r\n          addProduct={this.addProduct}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FetchData;\r\n\n\n\n// WEBPACK FOOTER //\n// components/FetchData.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAHA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DA;AACA;AAAA;AACA;AAAA;AACA;AA7DA;AAEA;AACA;AADA;AAGA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;AAOA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAqCA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAXA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5FA;AACA;AA8FA;;;;A","sourceRoot":""}